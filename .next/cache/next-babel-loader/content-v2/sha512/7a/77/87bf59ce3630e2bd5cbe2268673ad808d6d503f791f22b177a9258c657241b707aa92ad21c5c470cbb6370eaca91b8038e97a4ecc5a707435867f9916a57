{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport ConversionPanel from \"@components/ConversionPanel\";\nimport { useCallback } from \"react\";\nimport * as React from \"react\";\nimport { xml2json } from \"xml-js\";\nexport default function XmlToJson() {\n  var transformer = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var value;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              value = _ref.value;\n              return _context.abrupt(\"return\", JSON.stringify(JSON.parse(xml2json(value, {\n                compact: true\n              }))));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n  return /*#__PURE__*/_jsx(ConversionPanel, {\n    transformer: transformer,\n    editorTitle: \"XML\",\n    editorLanguage: \"xml\",\n    resultTitle: \"JSON\",\n    resultLanguage: \"json\"\n  });\n}","map":null,"metadata":{},"sourceType":"module"}