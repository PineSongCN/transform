{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { SvgConverter } from \"@components/SvgConverter\";\nimport { useState } from \"react\";\nimport { defaultSettings, formFields } from \"@constants/svgoConfig\";\nimport { useCallback } from \"react\";\nimport isSvg from \"is-svg\";\nimport { getWorker } from \"@utils/workerWrapper\";\nimport SvgrWorker from \"@workers/svgr.worker\";\nimport SvgoWorker from \"@workers/svgo.worker\";\nlet prettier, svgo, svgr;\nexport default function Index() {\n  const name = \"SVG to JSX\";\n  const {\n    0: settings,\n    1: setSettings\n  } = useState(defaultSettings);\n  const {\n    0: optimizedValue,\n    1: setOptimizedValue\n  } = useState(\"\");\n  const transformer = useCallback(async ({\n    value\n  }) => {\n    if (!isSvg(value)) throw new Error(\"This is not a valid svg code.\");\n    svgr = svgr || getWorker(SvgrWorker);\n    svgo = svgo || getWorker(SvgoWorker);\n    let _value = value;\n\n    if (settings.optimizeSvg) {\n      _value = await svgo.send({\n        value,\n        settings\n      });\n    }\n\n    setOptimizedValue(_value);\n    _value = await svgr.send({\n      value: _value\n    });\n    return _value;\n  }, [settings]);\n  return /*#__PURE__*/_jsx(SvgConverter, {\n    transformer: transformer,\n    formFields: formFields(defaultSettings),\n    setSettings: setSettings,\n    optimizedValue: optimizedValue,\n    settings: settings,\n    name: name,\n    resultTitle: \"JSX\"\n  });\n}","map":null,"metadata":{},"sourceType":"module"}