{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport ConversionPanel from \"@components/ConversionPanel\";\nimport * as React from \"react\";\nimport { useCallback } from \"react\";\nimport Form, { InputType } from \"@components/Form\";\nimport { useSettings } from \"@hooks/useSettings\";\nvar formFields = [{\n  type: InputType.SELECT,\n  key: \"property_name_format\",\n  label: \"Property Name Format\",\n  options: [\"PascalCase\", \"camelCase\", \"snake_case\", \"SCREAMING_SNAKE_CASE\", \"kebab-case\", \"SCREAMING-KEBAB-CASE\", \"UPPERCASE\"].map(function (value) {\n    return {\n      label: value,\n      value: value\n    };\n  })\n}];\nvar defaultSettings = {\n  property_name_format: \"camelCase\"\n};\nexport default function JsonToRustSerde() {\n  var name = \"json-to-rust-serde\";\n\n  var _useSettings = useSettings(name, defaultSettings),\n      _useSettings2 = _slicedToArray(_useSettings, 2),\n      settings = _useSettings2[0],\n      setSettings = _useSettings2[1];\n\n  var transformer = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var value, _yield$import, run;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              value = _ref.value;\n              _context.next = 3;\n              return import(\"json_typegen_wasm\");\n\n            case 3:\n              _yield$import = _context.sent;\n              run = _yield$import.run;\n              return _context.abrupt(\"return\", run(\"Root\", value, JSON.stringify({\n                output_mode: \"rust\",\n                property_name_format: settings.property_name_format\n              })));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [settings]);\n  var getSettingsElement = useCallback(function (_ref3) {\n    var open = _ref3.open,\n        toggle = _ref3.toggle;\n    return /*#__PURE__*/_jsx(Form, {\n      title: \"JSON to Rust Serde\",\n      onSubmit: setSettings,\n      open: open,\n      toggle: toggle,\n      formsFields: formFields,\n      initialValues: settings\n    });\n  }, []);\n  return /*#__PURE__*/_jsx(ConversionPanel, {\n    transformer: transformer,\n    editorTitle: \"JSON\",\n    editorLanguage: \"json\",\n    resultTitle: \"Rust Serde\",\n    resultLanguage: \"rust\",\n    resultSettingsElement: getSettingsElement,\n    settings: settings\n  });\n}","map":null,"metadata":{},"sourceType":"module"}