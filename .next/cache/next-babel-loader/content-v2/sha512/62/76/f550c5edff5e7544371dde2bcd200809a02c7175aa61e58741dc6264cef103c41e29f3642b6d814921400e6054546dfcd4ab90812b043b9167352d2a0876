{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { routes } from \"@utils/routes\";\nimport { Autocomplete, SearchInput } from \"evergreen-ui\";\nimport React, { useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\n\nconst SearchBox = () => {\n  const router = useRouter();\n  const onSearchSelect = useCallback(changedItem => {\n    const route = routes.find(route => changedItem === route.searchTerm);\n    router.push(route.path);\n  }, []);\n  return /*#__PURE__*/_jsx(Autocomplete, {\n    onChange: onSearchSelect,\n    items: routes.map(a => a.searchTerm),\n    width: \"100%\",\n    children: props => {\n      const {\n        getInputProps,\n        getRef,\n        inputValue\n      } = props;\n      return /*#__PURE__*/_jsx(SearchInput, _objectSpread({\n        width: \"100%\",\n        marginBottom: 10,\n        placeholder: \"Search\",\n        value: inputValue,\n        innerRef: getRef\n      }, getInputProps()));\n    }\n  });\n};\n\nexport default SearchBox;","map":null,"metadata":{},"sourceType":"module"}