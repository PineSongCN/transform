{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from \"react\";\nimport { useCallback, useState } from \"react\";\nimport ConversionPanel from \"@components/ConversionPanel\";\nimport HtmlToJsx from \"htmltojsx\";\nimport Form, { InputType } from \"@components/Form\";\nimport { useSettings } from \"@hooks/useSettings\";\nimport isSvg from \"is-svg\";\nimport { Alert, Heading } from \"evergreen-ui\";\nimport Router from \"next/router\";\nvar formFields = [{\n  type: InputType.SWITCH,\n  key: \"createFunction\",\n  label: \"Create function component\"\n}];\nexport default function HtmlToJsxComponent() {\n  var name = \"HTML to JSX\";\n\n  var _useSettings = useSettings(name, {\n    createFunction: false\n  }),\n      _useSettings2 = _slicedToArray(_useSettings, 2),\n      settings = _useSettings2[0],\n      setSettings = _useSettings2[1];\n\n  var _useState = useState(false),\n      _isSvg = _useState[0],\n      setSvg = _useState[1];\n\n  var transformer = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var value, converter, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              value = _ref.value;\n              setSvg(isSvg(value));\n              converter = new HtmlToJsx({\n                createClass: false\n              });\n              result = converter.convert(value);\n\n              if (settings.createFunction) {\n                result = \"export const Foo = () => (\".concat(result, \")\");\n              }\n\n              return _context.abrupt(\"return\", result);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [settings]);\n  var getSettingsElement = useCallback(function (_ref3) {\n    var open = _ref3.open,\n        toggle = _ref3.toggle;\n    return /*#__PURE__*/_jsx(Form, {\n      title: \"HTML to JSX\",\n      onSubmit: setSettings,\n      open: open,\n      toggle: toggle,\n      formsFields: formFields,\n      initialValues: settings\n    });\n  }, []);\n  return /*#__PURE__*/_jsx(ConversionPanel, {\n    transformer: transformer,\n    editorTitle: \"HTML\",\n    resultLanguage: \"javascript\",\n    resultTitle: \"JSX\",\n    editorLanguage: \"html\",\n    editorSettingsElement: getSettingsElement,\n    settings: settings,\n    editorProps: {\n      topNotifications: function topNotifications() {\n        return _isSvg ? /*#__PURE__*/_jsx(Alert, {\n          backgroundColor: \"#e7f7ff\",\n          title: /*#__PURE__*/_jsxs(_Fragment, {\n            children: [\"SVG detected. For preview and optimization, go to\", \" \", /*#__PURE__*/_jsx(Heading, {\n              size: 400,\n              is: \"a\",\n              color: \"blue\",\n              onClick: function onClick() {\n                return Router.push(\"/svg-to-jsx\");\n              },\n              children: \"SVG to JSX converter.\"\n            })]\n          })\n        }) : undefined;\n      }\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}