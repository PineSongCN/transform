{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { useCallback, useState } from \"react\";\nimport ConversionPanel from \"@components/ConversionPanel\";\nimport { getWorker } from \"@utils/workerWrapper\";\nimport GrapqlWorker from \"@workers/graphql.worker\";\nimport { GraphqlTransforms } from \"@constants/graphqlTransforms\";\nimport { Select } from \"evergreen-ui\";\nlet graphqlWorker;\nconst props = {\n  acceptFiles: \".graphql, .gql\"\n};\nexport default function GraphqlToComponents() {\n  const {\n    0: output,\n    1: setOutput\n  } = useState(GraphqlTransforms.TO_REACT_APOLLO.toString(10));\n  const transformer = useCallback(async ({\n    value,\n    splitEditorValue\n  }) => {\n    graphqlWorker = graphqlWorker || getWorker(GrapqlWorker);\n    return graphqlWorker.send({\n      type: parseInt(output, 10),\n      value,\n      document: splitEditorValue\n    });\n  }, [output]);\n  return /*#__PURE__*/_jsx(ConversionPanel, {\n    settings: output,\n    transformer: transformer,\n    resultTitle: /*#__PURE__*/_jsxs(Select, {\n      value: output,\n      onChange: e => setOutput(e.target.value),\n      children: [/*#__PURE__*/_jsx(\"option\", {\n        value: GraphqlTransforms.TO_REACT_APOLLO,\n        children: \"TypeScript React Apollo\"\n      }), /*#__PURE__*/_jsx(\"option\", {\n        value: GraphqlTransforms.TO_APOLLO_ANGULAR,\n        children: \"TypeScript Apollo Angular\"\n      }), /*#__PURE__*/_jsx(\"option\", {\n        value: GraphqlTransforms.TO_STENCIL_APOLLO,\n        children: \"TypeScript Stencil Apollo\"\n      }), /*#__PURE__*/_jsx(\"option\", {\n        value: GraphqlTransforms.TO_URQL,\n        children: \"TypeScript urql\"\n      })]\n    }),\n    editorTitle: \"GraphQL Schema\",\n    editorLanguage: \"graphql\",\n    editorDefaultValue: \"graphql1\",\n    resultLanguage: \"typescript\",\n    editorProps: props,\n    splitEditorProps: props,\n    splitTitle: \"Document\",\n    splitLanguage: \"graphql\",\n    splitEditorDefaultValue: \"graphqlDocument\"\n  });\n}","map":null,"metadata":{},"sourceType":"module"}