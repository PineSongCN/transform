{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as React from \"react\";\nimport { useCallback, useState } from \"react\";\nimport ConversionPanel from \"@components/ConversionPanel\";\nimport { getWorker } from \"@utils/workerWrapper\";\nimport GrapqlWorker from \"@workers/graphql.worker\";\nimport { GraphqlTransforms } from \"@constants/graphqlTransforms\";\nimport { Select } from \"evergreen-ui\";\nvar graphqlWorker;\nvar props = {\n  acceptFiles: \".graphql, .gql\"\n};\nexport default function GraphqlToComponents() {\n  var _useState = useState(GraphqlTransforms.TO_REACT_APOLLO.toString(10)),\n      output = _useState[0],\n      setOutput = _useState[1];\n\n  var transformer = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var value, splitEditorValue;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              value = _ref.value, splitEditorValue = _ref.splitEditorValue;\n              graphqlWorker = graphqlWorker || getWorker(GrapqlWorker);\n              return _context.abrupt(\"return\", graphqlWorker.send({\n                type: parseInt(output, 10),\n                value: value,\n                document: splitEditorValue\n              }));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [output]);\n  return /*#__PURE__*/_jsx(ConversionPanel, {\n    settings: output,\n    transformer: transformer,\n    resultTitle: /*#__PURE__*/_jsxs(Select, {\n      value: output,\n      onChange: function onChange(e) {\n        return setOutput(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsx(\"option\", {\n        value: GraphqlTransforms.TO_REACT_APOLLO,\n        children: \"TypeScript React Apollo\"\n      }), /*#__PURE__*/_jsx(\"option\", {\n        value: GraphqlTransforms.TO_APOLLO_ANGULAR,\n        children: \"TypeScript Apollo Angular\"\n      }), /*#__PURE__*/_jsx(\"option\", {\n        value: GraphqlTransforms.TO_STENCIL_APOLLO,\n        children: \"TypeScript Stencil Apollo\"\n      }), /*#__PURE__*/_jsx(\"option\", {\n        value: GraphqlTransforms.TO_URQL,\n        children: \"TypeScript urql\"\n      })]\n    }),\n    editorTitle: \"GraphQL Schema\",\n    editorLanguage: \"graphql\",\n    editorDefaultValue: \"graphql1\",\n    resultLanguage: \"typescript\",\n    editorProps: props,\n    splitEditorProps: props,\n    splitTitle: \"Document\",\n    splitLanguage: \"graphql\",\n    splitEditorDefaultValue: \"graphqlDocument\"\n  });\n}","map":null,"metadata":{},"sourceType":"module"}