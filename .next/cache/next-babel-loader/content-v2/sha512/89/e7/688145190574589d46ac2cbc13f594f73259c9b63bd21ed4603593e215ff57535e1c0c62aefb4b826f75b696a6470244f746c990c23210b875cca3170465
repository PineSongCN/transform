{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport ConversionPanel from \"@components/ConversionPanel\";\nimport React, { useCallback } from \"react\";\nimport { getWorker } from \"@utils/workerWrapper\";\nimport PostCssWorker from \"@workers/postcss.worker\";\nimport { useSettings } from \"@hooks/useSettings\";\nvar postCssWorker;\nexport default function CssToJs() {\n  var name = \"CSS to JS\"; // TODO\n\n  var _useSettings = useSettings(name, {\n    reactNativeCompatible: false,\n    cleanPropertyNames: false\n  }),\n      _useSettings2 = _slicedToArray(_useSettings, 2),\n      settings = _useSettings2[0],\n      setSettings = _useSettings2[1];\n\n  var transformer = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var value, _value;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              value = _ref.value;\n              postCssWorker = postCssWorker || getWorker(PostCssWorker);\n              _context.next = 4;\n              return postCssWorker.send(value);\n\n            case 4:\n              _value = _context.sent;\n              return _context.abrupt(\"return\", \"const converted = \".concat(_value));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n  return /*#__PURE__*/_jsx(ConversionPanel, {\n    transformer: transformer,\n    resultTitle: \"JavaScript Object\",\n    editorTitle: \"CSS\",\n    editorLanguage: \"css\",\n    resultLanguage: \"javascript\",\n    editorProps: {\n      acceptFiles: \"text/css\"\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}