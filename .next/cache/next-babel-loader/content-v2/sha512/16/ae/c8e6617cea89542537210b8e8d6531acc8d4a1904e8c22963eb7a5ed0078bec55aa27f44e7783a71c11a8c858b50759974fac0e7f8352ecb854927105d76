{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport ConversionPanel from \"@components/ConversionPanel\";\nimport * as React from \"react\";\nimport { useCallback } from \"react\";\nimport { json2ts } from \"json-ts\";\nimport { useSettings } from \"@hooks/useSettings\";\nimport Form, { InputType } from \"@components/Form\";\nconst formFields = [{\n  type: InputType.TEXT_INPUT,\n  key: \"namespace\",\n  label: \"Namespace\"\n}, {\n  type: InputType.TEXT_INPUT,\n  key: \"prefix\",\n  label: \"prefix\"\n}, {\n  type: InputType.TEXT_INPUT,\n  key: \"rootName\",\n  label: \"Root Name\"\n}];\nconst defaultSettings = {\n  namespace: \"\",\n  prefix: \"I\",\n  rootName: \"RootObject\"\n};\nexport default function JsonToFlow() {\n  const name = \"json-to-flow\";\n  const [settings, setSettings] = useSettings(name, defaultSettings);\n  const getSettingsElement = useCallback(({\n    open,\n    toggle\n  }) => {\n    return /*#__PURE__*/_jsx(Form, {\n      title: \"JSON to Flow\",\n      onSubmit: setSettings,\n      open: open,\n      toggle: toggle,\n      formsFields: formFields,\n      initialValues: settings\n    });\n  }, []);\n  const transformer = useCallback(async ({\n    value\n  }) => {\n    return json2ts(value, _objectSpread({\n      flow: true\n    }, settings));\n  }, [settings]);\n  return /*#__PURE__*/_jsx(ConversionPanel, {\n    transformer: transformer,\n    editorTitle: \"JSON\",\n    editorLanguage: \"json\",\n    resultTitle: \"Flow\",\n    resultLanguage: \"typescript\",\n    resultSettingsElement: getSettingsElement,\n    settings: settings\n  });\n}","map":null,"metadata":{},"sourceType":"module"}