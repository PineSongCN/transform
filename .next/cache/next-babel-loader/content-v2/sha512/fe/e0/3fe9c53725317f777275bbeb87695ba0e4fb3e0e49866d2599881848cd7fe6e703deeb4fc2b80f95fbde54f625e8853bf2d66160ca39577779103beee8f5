{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { useCallback } from \"react\";\nimport ConversionPanel from \"@components/ConversionPanel\";\nimport { getWorker } from \"@utils/workerWrapper\";\nimport GrapqlWorker from \"@workers/graphql.worker\";\nimport { GraphqlTransforms } from \"@constants/graphqlTransforms\";\nlet graphqlWorker;\nconst props = {\n  acceptFiles: \".graphql, .gql\"\n};\nexport default function GraphqlToFlow() {\n  const transformer = useCallback(async ({\n    value,\n    splitEditorValue\n  }) => {\n    graphqlWorker = graphqlWorker || getWorker(GrapqlWorker);\n    return graphqlWorker.send({\n      type: GraphqlTransforms.TO_FLOW,\n      value,\n      document: splitEditorValue\n    });\n  }, []);\n  return /*#__PURE__*/_jsx(ConversionPanel, {\n    transformer: transformer,\n    resultTitle: \"Flow\",\n    editorTitle: \"GraphQL Schema\",\n    editorLanguage: \"graphql\",\n    editorDefaultValue: \"graphql1\",\n    resultLanguage: \"flow\",\n    editorProps: props,\n    splitEditorProps: props,\n    splitTitle: \"Document\",\n    splitLanguage: \"graphql\",\n    splitEditorDefaultValue: \"graphqlDocument\"\n  });\n}","map":null,"metadata":{},"sourceType":"module"}