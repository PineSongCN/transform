{"ast":null,"code":"import _defineProperty from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport flatten from \"lodash/flatten\";\nimport find from \"lodash/find\";\nexport var categorizedRoutes = [{\n  category: \"SVG\",\n  content: [{\n    label: \"to JSX\",\n    path: \"/\",\n    packageName: \"@svgr/core\",\n    packageUrl: \"https://github.com/smooth-code/svgr\",\n    title: \"Transform | A polyglot web converter.\"\n  }, {\n    label: \"to React Native\",\n    path: \"/svg-to-react-native\",\n    packageName: \"@svgr/core\",\n    packageUrl: \"https://github.com/smooth-code/svgr\"\n  }]\n}, {\n  category: \"HTML\",\n  content: [{\n    label: \"to JSX\",\n    path: \"/html-to-jsx\"\n  }, {\n    label: \"to Pug\",\n    path: \"/html-to-pug\",\n    packageName: \"html2pug\",\n    packageUrl: \"https://github.com/izolate/html2pug\"\n  }]\n}, {\n  category: \"JSON\",\n  content: [{\n    label: \"to React PropTypes\",\n    path: \"/json-to-proptypes\",\n    title: \"Transform | All important transforms at one place.\"\n  }, {\n    label: \"to Flow\",\n    path: \"/json-to-flow\"\n  }, {\n    label: \"to GraphQL\",\n    path: \"/json-to-graphql\",\n    packageName: \"@walmartlabs/json-to-simple-graphql-schema\",\n    packageUrl: \"https://github.com/walmartlabs/json-to-simple-graphql-schema\"\n  }, {\n    label: \"to TypeScript\",\n    path: \"/json-to-typescript\",\n    packageUrl: \"https://www.npmjs.com/package/json_typegen_wasm\",\n    packageName: \"json_typegen_wasm\"\n  }, {\n    label: \"to MobX-State-Tree Model\",\n    path: \"/json-to-mobx-state-tree\"\n  }, {\n    label: \"to Sarcastic\",\n    path: \"/json-to-sarcastic\",\n    packageName: \"transform-json-types\",\n    packageUrl: \"https://github.com/transform-it/transform-json-types\"\n  }, {\n    label: \"to io-ts\",\n    path: \"/json-to-io-ts\",\n    packageName: \"transform-json-types\",\n    packageUrl: \"https://github.com/transform-it/transform-json-types\"\n  }, {\n    label: \"to Rust Serde\",\n    path: \"/json-to-rust-serde\",\n    desc: \"An online REPL for converting JSON to Rust Serde Structs.\"\n  }, {\n    label: \"to Mongoose Schema\",\n    path: \"/json-to-mongoose\",\n    packageName: \"generate-schema\",\n    packageUrl: \"https://github.com/nijikokun/generate-schema\"\n  }, {\n    label: \"to Big Query Schema\",\n    path: \"/json-to-big-query\",\n    packageName: \"generate-schema\",\n    packageUrl: \"https://github.com/nijikokun/generate-schema\"\n  }, {\n    label: \"to MySQL\",\n    path: \"/json-to-mysql\",\n    packageName: \"generate-schema\",\n    packageUrl: \"https://github.com/nijikokun/generate-schema\"\n  }, {\n    label: \"to Scala Case Class\",\n    path: \"/json-to-scala-case-class\"\n  }, {\n    label: \"to Go Struct\",\n    path: \"/json-to-go\",\n    packageName: \"json-to-go\",\n    packageUrl: \"https://github.com/mholt/json-to-go\"\n  }, {\n    label: \"to Go Bson\",\n    path: \"/json-to-go-bson\"\n  }, {\n    label: \"to YAML\",\n    path: \"/json-to-yaml\",\n    packageName: \"json2yaml\",\n    packageUrl: \"https://github.com/jeffsu/json2yaml\"\n  }, {\n    label: \"to JSDoc\",\n    path: \"/json-to-jsdoc\"\n  }, {\n    label: \"to Kotlin\",\n    path: \"/json-to-kotlin\",\n    packageUrl: \"https://www.npmjs.com/package/json_typegen_wasm\",\n    packageName: \"json_typegen_wasm\"\n  }, {\n    label: \"to Java\",\n    path: \"/json-to-java\",\n    packageUrl: \"https://www.npmjs.com/package/json_typegen_wasm\",\n    packageName: \"json_typegen_wasm\"\n  }, {\n    label: \"to JSON Schema\",\n    path: \"/json-to-json-schema\",\n    packageUrl: \"https://www.npmjs.com/package/json_typegen_wasm\",\n    packageName: \"json_typegen_wasm\"\n  }, {\n    label: \"to TOML\",\n    path: \"/json-to-toml\",\n    packageUrl: \"https://www.npmjs.com/package/@iarna/toml\",\n    packageName: \"@iarna/toml\"\n  }, {\n    label: \"to Zod Schema\",\n    path: \"/json-to-zod\",\n    packageUrl: \"https://www.npmjs.com/package/json-to-zod\",\n    packageName: \"json-to-zod\"\n  }]\n}, {\n  category: \"JSON Schema\",\n  content: [{\n    label: \"to TypeScript\",\n    path: \"/json-schema-to-typescript\",\n    packageName: \"json-schema-to-typescript\",\n    packageUrl: \"https://github.com/bcherny/json-schema-to-typescript\"\n  }, {\n    label: \"to OpenAPI Schema\",\n    path: \"json-schema-to-openapi-schema\",\n    packageName: \"json-schema-to-openapi-schema\",\n    packageUrl: \"https://github.com/openapi-contrib/json-schema-to-openapi-schema\"\n  }, {\n    label: \"to Protobuf\",\n    path: \"json-schema-to-protobuf\",\n    packageName: \"jsonschema-protobuf\",\n    packageUrl: \"https://github.com/okdistribute/jsonschema-protobuf\"\n  }, {\n    label: \"to Zod Schema\",\n    path: \"json-schema-to-zod\",\n    packageName: \"json-schema-to-zod\",\n    packageUrl: \"https://www.npmjs.com/package/json-schema-to-zod\"\n  }]\n}, {\n  category: \"CSS\",\n  content: [{\n    label: \"to JS Objects\",\n    path: \"/css-to-js\",\n    packageName: \"transform-css-to-js\",\n    packageUrl: \"https://github.com/transform-it/transform-css-to-js\"\n  }, {\n    label: \"to template literal\",\n    path: \"/object-styles-to-template-literal\",\n    packageUrl: \"https://github.com/satya164/babel-plugin-object-styles-to-template\",\n    packageName: \"babel-plugin-object-styles-to-template\"\n  }, {\n    label: \"to TailwindCSS\",\n    path: \"/css-to-tailwind\",\n    packageUrl: \"https://github.com/Jackardios/css-to-tailwindcss\",\n    packageName: \"css-to-tailwindcss\"\n  }]\n}, {\n  category: \"JavaScript\",\n  content: [{\n    label: \"to JSON\",\n    path: \"/js-object-to-json\",\n    desc: \"An online REPL for converting JS Object to JSON.\"\n  }]\n}, {\n  category: \"GraphQL\",\n  content: [{\n    label: \"to TypeScript\",\n    path: \"/graphql-to-typescript\"\n  }, {\n    label: \"to Flow\",\n    path: \"/graphql-to-flow\"\n  }, {\n    label: \"to JAVA\",\n    path: \"/graphql-to-java\"\n  }, {\n    label: \"to Resolvers Signature\",\n    path: \"/graphql-to-resolvers-signature\"\n  }, {\n    label: \"to Introspection JSON\",\n    path: \"/graphql-to-introspection-json\"\n  }, {\n    label: \"to Schema AST\",\n    path: \"/graphql-to-schema-ast\"\n  }, {\n    label: \"to Fragment Matcher\",\n    path: \"/graphql-to-fragment-matcher\"\n  }, {\n    label: \"to Components\",\n    path: \"/graphql-to-components\"\n  }, {\n    label: \"to TypeScript MongoDB\",\n    path: \"/graphql-to-typescript-mongodb\"\n  }].map(function (x) {\n    return _objectSpread(_objectSpread({}, x), {}, {\n      packageUrl: \"https://github.com/dotansimha/graphql-code-generator\",\n      packageName: \"graphql-code-generator\"\n    });\n  })\n}, {\n  category: \"JSON-LD\",\n  content: [{\n    label: \"to N-Quads\",\n    path: \"/jsonld-to-nquads\"\n  }, {\n    label: \"to Expanded\",\n    path: \"/jsonld-to-expanded\"\n  }, {\n    label: \"to Compacted\",\n    path: \"/jsonld-to-compacted\"\n  }, {\n    label: \"to Flattened\",\n    path: \"/jsonld-to-flattened\"\n  }, {\n    label: \"to Framed\",\n    path: \"/jsonld-to-framed\"\n  }, {\n    label: \"to Normalized\",\n    path: \"jsonld-to-normalized\"\n  }].map(function (x) {\n    return _objectSpread(_objectSpread({}, x), {}, {\n      packageName: \"jsonld\",\n      packageUrl: \"https://github.com/digitalbazaar/jsonld.js\"\n    });\n  })\n}, {\n  category: \"TypeScript\",\n  content: [{\n    label: \"to Flow\",\n    path: \"/typescript-to-flow\",\n    packageName: \"flowgen\",\n    packageUrl: \"https://github.com/joarwilk/flowgen\"\n  }, {\n    label: \"to TypeScript Declaration\",\n    path: \"/typescript-to-typescript-declaration\"\n  }, {\n    label: \"to JSON Schema\",\n    path: \"/typescript-to-json-schema\",\n    packageName: \"ts-json-schema-generator\",\n    packageUrl: \"https://github.com/vega/ts-json-schema-generator\"\n  }, {\n    label: \"to plain JavaScript\",\n    path: \"/typescript-to-javascript\"\n  }, {\n    label: \"to Zod Schema\",\n    path: \"/typescript-to-zod\",\n    packageName: \"ts-to-zod\",\n    packageUrl: \"https://www.npmjs.com/package/ts-to-zod\"\n  }]\n}, {\n  category: \"Flow\",\n  iconName: \"\",\n  content: [{\n    label: \"to TypeScript\",\n    path: \"/flow-to-typescript\"\n  }, {\n    label: \"to TypeScript Declaration\",\n    path: \"/flow-to-typescript-declaration\"\n  }, {\n    label: \"to plain JavaScript\",\n    path: \"/flow-to-javascript\"\n  }]\n}, {\n  category: \"Others\",\n  iconName: \"\",\n  content: [{\n    label: \"XML to JSON\",\n    path: \"/xml-to-json\",\n    packageName: \"xml-js\",\n    packageUrl: \"https://github.com/nashwaan/xml-js\"\n  }, {\n    label: \"YAML to JSON\",\n    path: \"/yaml-to-json\",\n    packageName: \"yaml\",\n    packageUrl: \"https://github.com/tj/js-yaml\"\n  }, {\n    label: \"YAML to TOML\",\n    path: \"/yaml-to-toml\"\n  }, {\n    label: \"Markdown to HTML\",\n    path: \"/markdown-to-html\",\n    packageName: \"markdown\",\n    packageUrl: \"https://github.com/evilstreak/markdown-js\"\n  }, {\n    label: \"TOML to JSON\",\n    path: \"/toml-to-json\",\n    packageUrl: \"https://www.npmjs.com/package/@iarna/toml\",\n    packageName: \"@iarna/toml\"\n  }, {\n    label: \"TOML to YAML\",\n    path: \"/toml-to-yaml\"\n  }, {\n    label: \"Cadence to Go\",\n    path: \"/cadence-to-go\"\n  }]\n}];\nexport var routes = flatten(categorizedRoutes.map(function (a) {\n  return (// @ts-ignore\n    a.content.map(function (x) {\n      var _label = a.category.toLowerCase() !== \"others\" ? \"\".concat(a.category, \" \").concat(x.label) : x.label;\n\n      return _objectSpread(_objectSpread({}, x), {}, {\n        category: a.category,\n        searchTerm: _label,\n        desc: x.desc || \"An online playground to convert \".concat(_label)\n      });\n    })\n  );\n}));\nexport function activeRouteData(pathname) {\n  return find(routes, function (o) {\n    return o.path === pathname;\n  });\n}","map":null,"metadata":{},"sourceType":"module"}