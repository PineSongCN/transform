{"ast":null,"code":"import { parse, print } from \"recast\";\nimport { transformFromAstSync } from \"@babel/core\";\nimport transformFlow from \"@babel/plugin-transform-flow-strip-types\";\nexport default ((req, res) => {\n  try {\n    const ast = parse(req.body, {\n      parser: require(\"recast/parsers/flow\")\n    });\n    const options = {\n      cloneInputAst: false,\n      // recast stores metadata in AST nodes, so disable cloning will preserve the original code style\n      code: false,\n      ast: true,\n      plugins: [transformFlow],\n      configFile: false\n    };\n    const {\n      ast: transformedAST\n    } = transformFromAstSync(ast, req.body, options);\n    const result = print(transformedAST).code;\n    res.status(200).send(result);\n  } catch (e) {\n    console.log(e);\n    res.status(500).send(e.message);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}