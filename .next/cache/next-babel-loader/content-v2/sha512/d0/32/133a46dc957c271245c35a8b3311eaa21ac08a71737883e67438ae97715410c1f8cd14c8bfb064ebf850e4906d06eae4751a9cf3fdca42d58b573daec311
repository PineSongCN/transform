{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport ConversionPanel from \"@components/ConversionPanel\";\nimport * as React from \"react\";\nimport { useCallback, useState } from \"react\";\nimport { newEasiGen } from \"@lemonneko/easi-gen\";\nimport Form, { InputType } from \"@components/Form\";\nexport default function CadenceToGo() {\n  let generator;\n  const {\n    0: settings,\n    1: setSettings\n  } = useState({\n    generateContractCode: false\n  });\n  React.useEffect(console.log, [settings]);\n  const transformer = useCallback(async ({\n    value\n  }) => {\n    if (!generator) generator = await newEasiGen();\n    const generated = generator(value, !settings.generateContractCode);\n    return generated;\n  }, [settings]);\n  const outputSettingsElement = useCallback(({\n    open,\n    toggle\n  }) => {\n    return /*#__PURE__*/_jsx(Form, {\n      initialValues: settings,\n      open: open,\n      toggle: toggle,\n      title: \"Output Settings\",\n      onSubmit: setSettings,\n      formsFields: [{\n        key: \"generateContractCode\",\n        type: InputType.SWITCH,\n        label: \"Generate Interaction Code With Functions\"\n      }]\n    });\n  }, []);\n  return /*#__PURE__*/_jsx(ConversionPanel, {\n    transformer: transformer,\n    editorTitle: \"Cadence types\",\n    editorLanguage: \"text\",\n    editorDefaultValue: \"cadence\",\n    resultTitle: \"Go types\",\n    resultLanguage: \"go\",\n    settings: settings,\n    resultSettingsElement: outputSettingsElement\n  });\n}","map":null,"metadata":{},"sourceType":"module"}