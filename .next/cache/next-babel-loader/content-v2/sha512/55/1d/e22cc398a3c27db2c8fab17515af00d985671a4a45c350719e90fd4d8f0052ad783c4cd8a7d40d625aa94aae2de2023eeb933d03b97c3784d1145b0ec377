{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as React from \"react\";\nimport { SvgConverter } from \"@components/SvgConverter\";\nimport { useState } from \"react\";\nimport { defaultSettings, formFields } from \"@constants/svgoConfig\";\nimport { useCallback } from \"react\";\nimport isSvg from \"is-svg\";\nimport { getWorker } from \"@utils/workerWrapper\";\nimport SvgrWorker from \"@workers/svgr.worker\";\nimport SvgoWorker from \"@workers/svgo.worker\";\nvar prettier, svgo, svgr;\nexport default function Index() {\n  var name = \"SVG to JSX\";\n\n  var _useState = useState(defaultSettings),\n      settings = _useState[0],\n      setSettings = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      optimizedValue = _useState2[0],\n      setOptimizedValue = _useState2[1];\n\n  var transformer = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var value, _value;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              value = _ref.value;\n\n              if (isSvg(value)) {\n                _context.next = 3;\n                break;\n              }\n\n              throw new Error(\"This is not a valid svg code.\");\n\n            case 3:\n              svgr = svgr || getWorker(SvgrWorker);\n              svgo = svgo || getWorker(SvgoWorker);\n              _value = value;\n\n              if (!settings.optimizeSvg) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 9;\n              return svgo.send({\n                value: value,\n                settings: settings\n              });\n\n            case 9:\n              _value = _context.sent;\n\n            case 10:\n              setOptimizedValue(_value);\n              _context.next = 13;\n              return svgr.send({\n                value: _value\n              });\n\n            case 13:\n              _value = _context.sent;\n              return _context.abrupt(\"return\", _value);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [settings]);\n  return /*#__PURE__*/_jsx(SvgConverter, {\n    transformer: transformer,\n    formFields: formFields(defaultSettings),\n    setSettings: setSettings,\n    optimizedValue: optimizedValue,\n    settings: settings,\n    name: name,\n    resultTitle: \"JSX\"\n  });\n}","map":null,"metadata":{},"sourceType":"module"}