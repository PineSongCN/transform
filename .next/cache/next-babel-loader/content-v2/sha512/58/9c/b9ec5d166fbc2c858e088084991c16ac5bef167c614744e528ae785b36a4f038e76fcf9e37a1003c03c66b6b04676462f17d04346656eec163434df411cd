{"ast":null,"code":"var _os$tmpdir;\n\nimport * as tsj from \"ts-json-schema-generator\";\nimport os from \"os\";\nimport crypto from \"crypto\";\nimport path from \"path\";\nimport fs from \"fs\";\nconst tmpDir = (_os$tmpdir = os.tmpdir) === null || _os$tmpdir === void 0 ? void 0 : _os$tmpdir.call(os);\nexport default ((req, res) => {\n  const filePath = path.join(tmpDir, crypto.randomBytes(16).toString(\"hex\")) + \".ts\";\n\n  try {\n    fs.writeFileSync(filePath, req.body, {\n      encoding: \"utf-8\"\n    });\n    const config = {\n      path: filePath,\n      expose: \"all\",\n      jsDoc: \"extended\",\n      type: \"*\"\n    };\n    const schema = tsj.createGenerator(config).createSchema(config.type);\n    res.status(200).send(JSON.stringify(schema, null, 2));\n  } catch (e) {\n    res.status(500).send(e.message);\n  }\n\n  fs.unlinkSync(filePath);\n});","map":null,"metadata":{},"sourceType":"module"}