{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport ConversionPanel from \"@components/ConversionPanel\";\nimport { useCallback } from \"react\";\nimport * as React from \"react\";\nimport { compact } from \"jsonld\";\nexport default function JsonldToCompacted() {\n  var transformer = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var value, splitEditorValue, jsonLd;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              value = _ref.value, splitEditorValue = _ref.splitEditorValue;\n              _context.next = 3;\n              return compact(JSON.parse(value), JSON.parse(splitEditorValue));\n\n            case 3:\n              jsonLd = _context.sent;\n              return _context.abrupt(\"return\", JSON.stringify(jsonLd, null, 2));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n  return /*#__PURE__*/_jsx(ConversionPanel, {\n    transformer: transformer,\n    editorTitle: \"JSON-LD\",\n    editorDefaultValue: \"jsonLd\",\n    splitTitle: \"Context\",\n    splitLanguage: \"json\",\n    splitEditorDefaultValue: \"jsonLdContext\",\n    editorLanguage: \"json\",\n    resultTitle: \"Compacted\",\n    resultLanguage: \"json\"\n  });\n}","map":null,"metadata":{},"sourceType":"module"}