{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Pane, Alert, Spinner } from \"evergreen-ui\";\nimport EditorPanel from \"@components/EditorPanel\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useData } from \"@hooks/useData\";\nimport { useRouter } from \"next/router\";\nimport { activeRouteData } from \"@utils/routes\";\nimport PrettierWorker from \"@workers/prettier.worker\";\nimport { getWorker } from \"@utils/workerWrapper\";\nvar prettierWorker;\n\nfunction getEditorLanguage(lang) {\n  var mapping = {\n    flow: \"typescript\"\n  };\n  return mapping[lang] || lang;\n}\n\nvar ConversionPanel = function ConversionPanel(_ref) {\n  var splitEditorProps = _ref.splitEditorProps,\n      editorProps = _ref.editorProps,\n      resultEditorProps = _ref.resultEditorProps,\n      transformer = _ref.transformer,\n      splitLanguage = _ref.splitLanguage,\n      splitTitle = _ref.splitTitle,\n      editorLanguage = _ref.editorLanguage,\n      editorTitle = _ref.editorTitle,\n      resultLanguage = _ref.resultLanguage,\n      resultTitle = _ref.resultTitle,\n      editorSettingsElement = _ref.editorSettingsElement,\n      settings = _ref.settings,\n      editorDefaultValue = _ref.editorDefaultValue,\n      splitEditorDefaultValue = _ref.splitEditorDefaultValue,\n      resultSettingsElement = _ref.resultSettingsElement;\n\n  var _useData = useData(editorDefaultValue || editorLanguage),\n      _useData2 = _slicedToArray(_useData, 2),\n      value = _useData2[0],\n      setValue = _useData2[1];\n\n  var _useData3 = useData(splitEditorDefaultValue || splitLanguage),\n      _useData4 = _slicedToArray(_useData3, 2),\n      splitValue = _useData4[0],\n      setSplitValue = _useData4[1];\n\n  var _useState = useState(\"\"),\n      result = _useState[0],\n      setResult = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(false),\n      showUpdateSpinner = _useState3[0],\n      toggleUpdateSpinner = _useState3[1];\n\n  var router = useRouter();\n  var route = activeRouteData(router.pathname);\n  var packageDetails;\n\n  if (route) {\n    var packageUrl = route.packageUrl,\n        packageName = route.packageName;\n    packageDetails = packageName && packageUrl ? {\n      name: packageName,\n      url: packageUrl\n    } : undefined;\n  }\n\n  useEffect(function () {\n    function transform() {\n      return _transform.apply(this, arguments);\n    }\n\n    function _transform() {\n      _transform = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _result, prettyResult;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                toggleUpdateSpinner(true);\n                prettierWorker = prettierWorker || getWorker(PrettierWorker);\n                _context.next = 5;\n                return transformer({\n                  value: value,\n                  splitEditorValue: splitTitle ? splitValue : undefined\n                });\n\n              case 5:\n                _result = _context.sent;\n                _context.next = 8;\n                return prettierWorker.send({\n                  value: _result,\n                  language: resultLanguage\n                });\n\n              case 8:\n                prettyResult = _context.sent;\n\n                // Fix for #319\n                if (prettyResult.startsWith(\";<\")) {\n                  prettyResult = prettyResult.slice(1);\n                }\n\n                setResult(prettyResult);\n                setMessage(\"\");\n                _context.next = 18;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n                setMessage(_context.t0.message);\n\n              case 18:\n                toggleUpdateSpinner(false);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 14]]);\n      }));\n      return _transform.apply(this, arguments);\n    }\n\n    transform();\n  }, [splitValue, value, splitTitle, settings]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Pane, {\n      display: \"flex\",\n      flexDirection: \"row\",\n      overflow: \"hidden\",\n      flex: 1,\n      height: \"calc(100vh - 40px)\",\n      children: [/*#__PURE__*/_jsxs(Pane, {\n        display: \"flex\",\n        flex: 1,\n        borderRight: true,\n        flexDirection: \"column\",\n        overflow: \"hidden\",\n        children: [/*#__PURE__*/_jsx(EditorPanel, _objectSpread({\n          language: getEditorLanguage(editorLanguage),\n          onChange: setValue,\n          hasLoad: true,\n          defaultValue: value,\n          id: 1,\n          hasCopy: false,\n          title: editorTitle,\n          settingElement: editorSettingsElement,\n          hasClear: true\n        }, editorProps)), splitTitle && /*#__PURE__*/_jsx(Pane, {\n          display: \"flex\",\n          flex: 1,\n          borderTop: true,\n          children: /*#__PURE__*/_jsx(EditorPanel, _objectSpread({\n            title: splitTitle,\n            defaultValue: splitValue,\n            language: getEditorLanguage(splitLanguage),\n            id: 2,\n            hasCopy: false,\n            onChange: setSplitValue,\n            hasLoad: true,\n            hasClear: true\n          }, splitEditorProps))\n        })]\n      }), /*#__PURE__*/_jsxs(Pane, {\n        display: \"flex\",\n        flex: 1,\n        position: \"relative\",\n        children: [showUpdateSpinner && /*#__PURE__*/_jsx(Pane, {\n          display: \"inline-flex\",\n          position: \"absolute\",\n          backgroundColor: \"#fff\",\n          zIndex: 9,\n          borderRadius: \"50%\",\n          paddingX: 8,\n          paddingY: 8,\n          elevation: 1,\n          top: 50,\n          right: 30,\n          children: /*#__PURE__*/_jsx(Spinner, {\n            css: {\n              \"& circle\": {\n                stroke: \"#0e7ccf\"\n              }\n            },\n            size: 32\n          })\n        }), /*#__PURE__*/_jsx(EditorPanel, _objectSpread({\n          title: resultTitle,\n          defaultValue: result,\n          language: getEditorLanguage(resultLanguage),\n          id: 3,\n          editable: false,\n          hasPrettier: false,\n          settingElement: resultSettingsElement,\n          packageDetails: packageDetails\n        }, resultEditorProps))]\n      })]\n    }), message && /*#__PURE__*/_jsx(Alert, {\n      paddingY: 15,\n      paddingX: 20,\n      left: 240,\n      right: 0,\n      position: \"absolute\",\n      intent: \"danger\",\n      bottom: 0,\n      title: message,\n      backgroundColor: \"#FAE2E2\",\n      zIndex: 3\n    })]\n  });\n};\n\nexport default /*#__PURE__*/React.memo(ConversionPanel);","map":null,"metadata":{},"sourceType":"module"}