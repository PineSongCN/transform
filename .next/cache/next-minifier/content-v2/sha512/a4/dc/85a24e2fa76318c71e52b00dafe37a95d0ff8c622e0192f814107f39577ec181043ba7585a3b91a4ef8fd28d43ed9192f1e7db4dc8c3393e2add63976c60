{"code":"_N_E=(\"object\"!==typeof self?self:this.webpackJsonp_N_E=\"object\"!==typeof self?self:this.webpackJsonp_N_E||[]).push([[60],{NcDY:function(t,n,c){\"use strict\";c.r(n),c.d(n,\"default\",(function(){return u}));var a=c(\"nKUr\"),o=c(\"vJKn\"),e=c.n(o),s=c(\"rg98\"),r=c(\"sN8P\"),i=c(\"q1tI\");function u(){var t=Object(i.useCallback)(function(){var t=Object(s.a)(e.a.mark((function t(n){var a,o,s,r,i,u,l,p;return e.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return a=n.value,t.next=3,Promise.all([c.e(10),c.e(11),c.e(18)]).then(c.bind(null,\"P0Z9\"));case 3:return o=t.sent,s=o.run,r=s(\"Root\",a,JSON.stringify({output_mode:\"kotlin\"})).split(\"\\n\"),i=\"\",u=\"\",l=[],p=[],r.forEach((function(t){var n=t;if(\")\"===(t=t.trim())){for(var c=[],a=[],o=[],e=0;e<l.length;e++){var s=p[e],r=l[e],f=r.charAt(0).toUpperCase()+r.substring(1);c.push(\"\".concat(s,\" \").concat(r)),a.push(\"\\tpublic \".concat(s,\" get\").concat(f,\"() {\\n\\t\\treturn this.\").concat(r,\";\\n\\t}\\n\")),o.push(\"\\tpublic void set\".concat(f,\"(\").concat(s,\" \").concat(r,\") {\\n\\t\\tthis.\").concat(r,\" = \").concat(r,\";\\n\\t}\\n\"))}var h=\"\\tpublic \".concat(u,\"(\").concat(c.join(\", \"),\") {\"),b=[];l.forEach((function(t){b.push(\"this.\".concat(t,\" = \").concat(t,\";\"))})),h+=\"\\n\\t\\t\".concat(b.join(\"\\n\\t\\t\"),\"\\n\\t}\\n\"),i+=\"\\n\".concat(h,\"\\n\").concat(a.join(\"\\n\"),\"\\n\").concat(o.join(\"\\n\"),\"}\"),u=\"\",l=[],p=[]}else if(t.startsWith(\"data class \")){var v=t.indexOf(\"(\"),g=t.substring(11,v);i+=\"public class \".concat(g,\" {\"),u=g}else if(t.startsWith(\"val\")){var d=t.replace(\"?\",\"\"),j=d.indexOf(\":\"),_=d.substring(4,j),N=d.indexOf(\":\")+2,O=d.substring(N,d.length-1);O=(O=O.replace(\"<Any>?\",\"<?>\")).replace(\"<Any>\",\"<?>\"),l.push(_),p.push(O),i+=\"\\tprivate \".concat(O,\" \").concat(_,\";\")}else if(t.startsWith(\"typealias\")){var w=t.indexOf(\" =\"),x=t.substring(10,w),k=t.indexOf(\"=\")+2,y=t.substring(k,t.length-1),E=x.charAt(0).toLowerCase()+x.substring(1),m=x,J=\"\\tpublic \".concat(y,\" get\").concat(m,\"() {\\n\\t\\treturn this.\").concat(E,\";\\n\\t}\\n\\n\"),P=\"\\tpublic void set\".concat(m,\"(\").concat(y,\" \").concat(E,\") {\\n\\t\\tthis.\").concat(E,\" = \").concat(E,\";\\n\\t}\\n\\n\"),A=\"\\tpublic \".concat(x,\"(\").concat(y,\" \").concat(E,\") {\\n\\t\\tthis.\").concat(E,\" = \").concat(E,\";\\n\\t}\\n\");i+=\"public class \".concat(x,\" {\\n\\tprivate \").concat(y,\" \").concat(E,\";\\n\"),i+=\"\\n\".concat(A,\"\\n\").concat(J).concat(P,\"}\")}else t.startsWith(\"import\")?i+=\"\".concat(t,\";\"):i+=n;i+=\"\\n\"})),t.abrupt(\"return\",i);case 12:case\"end\":return t.stop()}}),t)})));return function(n){return t.apply(this,arguments)}}(),[]);return Object(a.jsx)(r.a,{transformer:t,editorTitle:\"JSON\",editorLanguage:\"json\",resultTitle:\"Java\",resultLanguage:\"java\"})}},Yak3:function(t,n,c){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/json-to-java\",function(){return c(\"NcDY\")}])}},[[\"Yak3\",1,2,0,3]]]);","map":{"version":3,"sources":["static/chunks/pages/json-to-java-f800f6f3a167ff0b9d57.js"],"names":["_N_E","self","this","push","NcDY","module","__webpack_exports__","__webpack_require__","r","d","JsonToJava","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","_Users_songxu_Develop_test_transform_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_songxu_Develop_test_transform_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","n","_Users_songxu_Develop_test_transform_node_modules_next_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_components_ConversionPanel__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","transformer","Object","_ref2","a","mark","_callee","_ref","value","_yield$import","run","kotlinTransformationLines","javaTransformation","currentClass","variableNames","variableTypes","wrap","_context","prev","next","Promise","all","e","then","bind","sent","JSON","stringify","output_mode","split","forEach","line","originalLine","trim","args","getters","setters","i","length","type","variableName","titleCaseVariable","charAt","toUpperCase","substring","concat","_constructor","join","properties","variable","startsWith","classNameEndIndex","indexOf","className","processedLine","replace","variableEndIndex","typeStartIndex","_type","_classNameEndIndex","_className","typeNameEndIndex","_type2","_variable","toLowerCase","_titleCaseVariable","_getters","_setters","_constructor2","abrupt","stop","_x","apply","arguments","editorTitle","editorLanguage","resultTitle","resultLanguage","Yak3","exports","window","__NEXT_P"],"mappings":"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"},"name":"static/chunks/pages/json-to-java-f800f6f3a167ff0b9d57.js","input":"_N_E =\n(typeof self !== \"object\" ? self : this[\"webpackJsonp_N_E\"] = typeof self !== \"object\" ? self : this[\"webpackJsonp_N_E\"] || []).push([[60],{\n\n/***/ \"NcDY\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return JsonToJava; });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"nKUr\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Users_songxu_Develop_test_transform_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"vJKn\");\n/* harmony import */ var _Users_songxu_Develop_test_transform_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Users_songxu_Develop_test_transform_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Users_songxu_Develop_test_transform_node_modules_next_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"rg98\");\n/* harmony import */ var _components_ConversionPanel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"sN8P\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"q1tI\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\nfunction JsonToJava() {\n  var transformer = Object(react__WEBPACK_IMPORTED_MODULE_4__[\"useCallback\"])( /*#__PURE__*/function () {\n    var _ref2 = Object(_Users_songxu_Develop_test_transform_node_modules_next_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[/* default */ \"a\"])( /*#__PURE__*/_Users_songxu_Develop_test_transform_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee(_ref) {\n      var value, _yield$import, run, kotlinTransformationLines, javaTransformation, currentClass, variableNames, variableTypes;\n\n      return _Users_songxu_Develop_test_transform_node_modules_next_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              value = _ref.value;\n              _context.next = 3;\n              return Promise.all(/* import() */[__webpack_require__.e(10), __webpack_require__.e(11), __webpack_require__.e(18)]).then(__webpack_require__.bind(null, \"P0Z9\"));\n\n            case 3:\n              _yield$import = _context.sent;\n              run = _yield$import.run;\n              kotlinTransformationLines = run(\"Root\", value, JSON.stringify({\n                output_mode: \"kotlin\"\n              })).split(\"\\n\"); // use Kotlin transformation to convert JSON to Java\n\n              javaTransformation = \"\";\n              currentClass = \"\";\n              variableNames = [];\n              variableTypes = [];\n              kotlinTransformationLines.forEach(function (line) {\n                var originalLine = line;\n                line = line.trim();\n\n                if (line === \")\") {\n                  // Class is closing so generate constructor, getters and setters for\n                  // the current class, close the class and reset running values\n                  var args = [];\n                  var getters = [];\n                  var setters = []; // Create args for constructor, getters and setters\n\n                  for (var i = 0; i < variableNames.length; i++) {\n                    var type = variableTypes[i];\n                    var variableName = variableNames[i];\n                    var titleCaseVariable = variableName.charAt(0).toUpperCase() + variableName.substring(1);\n                    args.push(\"\".concat(type, \" \").concat(variableName));\n                    getters.push(\"\\tpublic \".concat(type, \" get\").concat(titleCaseVariable, \"() {\\n\\t\\treturn this.\").concat(variableName, \";\\n\\t}\\n\"));\n                    setters.push(\"\\tpublic void set\".concat(titleCaseVariable, \"(\").concat(type, \" \").concat(variableName, \") {\\n\\t\\tthis.\").concat(variableName, \" = \").concat(variableName, \";\\n\\t}\\n\"));\n                  } // Create constructor\n\n\n                  var _constructor = \"\\tpublic \".concat(currentClass, \"(\").concat(args.join(\", \"), \") {\");\n\n                  var properties = [];\n                  variableNames.forEach(function (variable) {\n                    properties.push(\"this.\".concat(variable, \" = \").concat(variable, \";\"));\n                  });\n                  _constructor += \"\\n\\t\\t\".concat(properties.join(\"\\n\\t\\t\"), \"\\n\\t}\\n\");\n                  javaTransformation += \"\\n\".concat(_constructor, \"\\n\").concat(getters.join(\"\\n\"), \"\\n\").concat(setters.join(\"\\n\"), \"}\"); // Reset running values\n\n                  currentClass = \"\";\n                  variableNames = [];\n                  variableTypes = [];\n                } else if (line.startsWith(\"data class \")) {\n                  // Change the start of a class from 'data class Root(' to 'public class Root {'\n                  var classNameStartIndex = 11;\n                  var classNameEndIndex = line.indexOf(\"(\");\n                  var className = line.substring(classNameStartIndex, classNameEndIndex);\n                  javaTransformation += \"public class \".concat(className, \" {\");\n                  currentClass = className;\n                } else if (line.startsWith(\"val\")) {\n                  // If this is a variable, change 'val name: String' to 'private String name;'\n                  // followed by respective getters, setters for the variable\n                  var processedLine = line.replace(\"?\", \"\");\n                  var variableStartIndex = 4; // length of string \"val \"\n\n                  var variableEndIndex = processedLine.indexOf(\":\");\n                  var variable = processedLine.substring(variableStartIndex, variableEndIndex);\n                  var typeStartIndex = processedLine.indexOf(\":\") + 2;\n\n                  var _type = processedLine.substring(typeStartIndex, processedLine.length - 1); // Update kotlin generic typing to Java generic typing\n\n\n                  _type = _type.replace(\"<Any>?\", \"<?>\");\n                  _type = _type.replace(\"<Any>\", \"<?>\"); // Save variables and their types to be later used in constructor, getter, setter generation\n\n                  variableNames.push(variable);\n                  variableTypes.push(_type);\n                  javaTransformation += \"\\tprivate \".concat(_type, \" \").concat(variable, \";\");\n                } else if (line.startsWith(\"typealias\")) {\n                  // If this is a kotlin typealias, make it into a class\n                  var _classNameStartIndex = 10; // length of string \"typealias \"\n\n                  var _classNameEndIndex = line.indexOf(\" =\");\n\n                  var _className = line.substring(_classNameStartIndex, _classNameEndIndex);\n\n                  var typeNameEndIndex = line.indexOf(\"=\") + 2;\n\n                  var _type2 = line.substring(typeNameEndIndex, line.length - 1); // ignore the semi-colon\n\n\n                  var _variable = _className.charAt(0).toLowerCase() + _className.substring(1);\n\n                  var _titleCaseVariable = _className;\n\n                  var _getters = \"\\tpublic \".concat(_type2, \" get\").concat(_titleCaseVariable, \"() {\\n\\t\\treturn this.\").concat(_variable, \";\\n\\t}\\n\\n\");\n\n                  var _setters = \"\\tpublic void set\".concat(_titleCaseVariable, \"(\").concat(_type2, \" \").concat(_variable, \") {\\n\\t\\tthis.\").concat(_variable, \" = \").concat(_variable, \";\\n\\t}\\n\\n\");\n\n                  var _constructor2 = \"\\tpublic \".concat(_className, \"(\").concat(_type2, \" \").concat(_variable, \") {\\n\\t\\tthis.\").concat(_variable, \" = \").concat(_variable, \";\\n\\t}\\n\");\n\n                  javaTransformation += \"public class \".concat(_className, \" {\\n\\tprivate \").concat(_type2, \" \").concat(_variable, \";\\n\");\n                  javaTransformation += \"\\n\".concat(_constructor2, \"\\n\").concat(_getters).concat(_setters, \"}\");\n                } else if (line.startsWith(\"import\")) {\n                  javaTransformation += \"\".concat(line, \";\");\n                } else {\n                  // If there's any other line, it is most probably a 'next line character', so just append it\n                  javaTransformation += originalLine;\n                }\n\n                javaTransformation += \"\\n\";\n              });\n              return _context.abrupt(\"return\", javaTransformation);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n  return /*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__[\"jsx\"])(_components_ConversionPanel__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"], {\n    transformer: transformer,\n    editorTitle: \"JSON\",\n    editorLanguage: \"json\",\n    resultTitle: \"Java\",\n    resultLanguage: \"java\"\n  });\n}\n\n/***/ }),\n\n/***/ \"Yak3\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/json-to-java\",\n      function () {\n        return __webpack_require__(\"NcDY\");\n      }\n    ]);\n  \n\n/***/ })\n\n},[[\"Yak3\",1,2,0,3]]]);","inputSourceMap":{"version":3,"sources":["/Users/songxu/Develop/test/transform/node_modules/next/dist/build/webpack/loaders/next-babel-loader.js??ref--5!/Users/songxu/Develop/test/transform/pages/json-to-java.tsx","/Users/songxu/Develop/test/transform/node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2Fjson-to-java&absolutePagePath=private-next-pages%2Fjson-to-java.tsx!"],"names":[],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACiF;AACe;AACtF;AAC3B;AACK;AACrB;AACf,oBAAoB,yDAAW;AAC/B,gBAAgB,sKAAiB,eAAe,oIAAmB;AACnE;;AAEA,aAAa,oIAAmB;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB,yJAA2B;;AAEhD;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA,iGAAiG,4CAA4C,KAAK;AAClJ,+HAA+H,iEAAiE,KAAK;AACrM,mBAAmB;;;AAGnB,uGAAuG;;AAEvG;AACA;AACA,uFAAuF;AACvF,mBAAmB;AACnB,mFAAmF;AACnF,sIAAsI,GAAG;;AAEzI;AACA;AACA;AACA,iBAAiB;AACjB,gGAAgG;AAChG;AACA;AACA;AACA,6EAA6E;AAC7E;AACA,iBAAiB;AACjB,8FAA8F;AAC9F;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;;AAEA,gGAAgG;;;AAGhG;AACA,wDAAwD;;AAExD;AACA;AACA,2FAA2F;AAC3F,iBAAiB;AACjB;AACA,gDAAgD;;AAEhD;;AAEA;;AAEA;;AAEA,iFAAiF;;;AAGjF;;AAEA;;AAEA,oGAAoG,yCAAyC,KAAK;;AAElJ,+HAA+H,2DAA2D,KAAK;;AAE/L,oHAAoH,2DAA2D,KAAK;;AAEpL,8EAA8E,uDAAuD;AACrI,6GAA6G;AAC7G,iBAAiB;AACjB,0DAA0D;AAC1D,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA,GAAG;AACH,sBAAsB,6DAAI,CAAC,2EAAe;AAC1C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,C;;;;;;;;AC/IA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,MAAqC;AAC5D;AACA","file":"x","sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/songxu/Develop/test/transform/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport ConversionPanel from \"@components/ConversionPanel\";\nimport * as React from \"react\";\nimport { useCallback } from \"react\";\nexport default function JsonToJava() {\n  var transformer = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var value, _yield$import, run, kotlinTransformationLines, javaTransformation, currentClass, variableNames, variableTypes;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              value = _ref.value;\n              _context.next = 3;\n              return import(\"json_typegen_wasm\");\n\n            case 3:\n              _yield$import = _context.sent;\n              run = _yield$import.run;\n              kotlinTransformationLines = run(\"Root\", value, JSON.stringify({\n                output_mode: \"kotlin\"\n              })).split(\"\\n\"); // use Kotlin transformation to convert JSON to Java\n\n              javaTransformation = \"\";\n              currentClass = \"\";\n              variableNames = [];\n              variableTypes = [];\n              kotlinTransformationLines.forEach(function (line) {\n                var originalLine = line;\n                line = line.trim();\n\n                if (line === \")\") {\n                  // Class is closing so generate constructor, getters and setters for\n                  // the current class, close the class and reset running values\n                  var args = [];\n                  var getters = [];\n                  var setters = []; // Create args for constructor, getters and setters\n\n                  for (var i = 0; i < variableNames.length; i++) {\n                    var type = variableTypes[i];\n                    var variableName = variableNames[i];\n                    var titleCaseVariable = variableName.charAt(0).toUpperCase() + variableName.substring(1);\n                    args.push(\"\".concat(type, \" \").concat(variableName));\n                    getters.push(\"\\tpublic \".concat(type, \" get\").concat(titleCaseVariable, \"() {\\n\\t\\treturn this.\").concat(variableName, \";\\n\\t}\\n\"));\n                    setters.push(\"\\tpublic void set\".concat(titleCaseVariable, \"(\").concat(type, \" \").concat(variableName, \") {\\n\\t\\tthis.\").concat(variableName, \" = \").concat(variableName, \";\\n\\t}\\n\"));\n                  } // Create constructor\n\n\n                  var _constructor = \"\\tpublic \".concat(currentClass, \"(\").concat(args.join(\", \"), \") {\");\n\n                  var properties = [];\n                  variableNames.forEach(function (variable) {\n                    properties.push(\"this.\".concat(variable, \" = \").concat(variable, \";\"));\n                  });\n                  _constructor += \"\\n\\t\\t\".concat(properties.join(\"\\n\\t\\t\"), \"\\n\\t}\\n\");\n                  javaTransformation += \"\\n\".concat(_constructor, \"\\n\").concat(getters.join(\"\\n\"), \"\\n\").concat(setters.join(\"\\n\"), \"}\"); // Reset running values\n\n                  currentClass = \"\";\n                  variableNames = [];\n                  variableTypes = [];\n                } else if (line.startsWith(\"data class \")) {\n                  // Change the start of a class from 'data class Root(' to 'public class Root {'\n                  var classNameStartIndex = 11;\n                  var classNameEndIndex = line.indexOf(\"(\");\n                  var className = line.substring(classNameStartIndex, classNameEndIndex);\n                  javaTransformation += \"public class \".concat(className, \" {\");\n                  currentClass = className;\n                } else if (line.startsWith(\"val\")) {\n                  // If this is a variable, change 'val name: String' to 'private String name;'\n                  // followed by respective getters, setters for the variable\n                  var processedLine = line.replace(\"?\", \"\");\n                  var variableStartIndex = 4; // length of string \"val \"\n\n                  var variableEndIndex = processedLine.indexOf(\":\");\n                  var variable = processedLine.substring(variableStartIndex, variableEndIndex);\n                  var typeStartIndex = processedLine.indexOf(\":\") + 2;\n\n                  var _type = processedLine.substring(typeStartIndex, processedLine.length - 1); // Update kotlin generic typing to Java generic typing\n\n\n                  _type = _type.replace(\"<Any>?\", \"<?>\");\n                  _type = _type.replace(\"<Any>\", \"<?>\"); // Save variables and their types to be later used in constructor, getter, setter generation\n\n                  variableNames.push(variable);\n                  variableTypes.push(_type);\n                  javaTransformation += \"\\tprivate \".concat(_type, \" \").concat(variable, \";\");\n                } else if (line.startsWith(\"typealias\")) {\n                  // If this is a kotlin typealias, make it into a class\n                  var _classNameStartIndex = 10; // length of string \"typealias \"\n\n                  var _classNameEndIndex = line.indexOf(\" =\");\n\n                  var _className = line.substring(_classNameStartIndex, _classNameEndIndex);\n\n                  var typeNameEndIndex = line.indexOf(\"=\") + 2;\n\n                  var _type2 = line.substring(typeNameEndIndex, line.length - 1); // ignore the semi-colon\n\n\n                  var _variable = _className.charAt(0).toLowerCase() + _className.substring(1);\n\n                  var _titleCaseVariable = _className;\n\n                  var _getters = \"\\tpublic \".concat(_type2, \" get\").concat(_titleCaseVariable, \"() {\\n\\t\\treturn this.\").concat(_variable, \";\\n\\t}\\n\\n\");\n\n                  var _setters = \"\\tpublic void set\".concat(_titleCaseVariable, \"(\").concat(_type2, \" \").concat(_variable, \") {\\n\\t\\tthis.\").concat(_variable, \" = \").concat(_variable, \";\\n\\t}\\n\\n\");\n\n                  var _constructor2 = \"\\tpublic \".concat(_className, \"(\").concat(_type2, \" \").concat(_variable, \") {\\n\\t\\tthis.\").concat(_variable, \" = \").concat(_variable, \";\\n\\t}\\n\");\n\n                  javaTransformation += \"public class \".concat(_className, \" {\\n\\tprivate \").concat(_type2, \" \").concat(_variable, \";\\n\");\n                  javaTransformation += \"\\n\".concat(_constructor2, \"\\n\").concat(_getters).concat(_setters, \"}\");\n                } else if (line.startsWith(\"import\")) {\n                  javaTransformation += \"\".concat(line, \";\");\n                } else {\n                  // If there's any other line, it is most probably a 'next line character', so just append it\n                  javaTransformation += originalLine;\n                }\n\n                javaTransformation += \"\\n\";\n              });\n              return _context.abrupt(\"return\", javaTransformation);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n  return /*#__PURE__*/_jsx(ConversionPanel, {\n    transformer: transformer,\n    editorTitle: \"JSON\",\n    editorLanguage: \"json\",\n    resultTitle: \"Java\",\n    resultLanguage: \"java\"\n  });\n}","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/json-to-java\",\n      function () {\n        return require(\"private-next-pages/json-to-java.tsx\");\n      }\n    ]);\n  "]}}